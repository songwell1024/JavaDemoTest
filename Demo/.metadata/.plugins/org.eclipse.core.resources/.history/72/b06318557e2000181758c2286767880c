package abstractClasses;

import java.time.*;

public class PersonTest {
	public static void main(String[] args) {
		Person[] people = new Person[2];
		
		people[0] = new Employee("Tom", 20000, 2000, 01, 01);
		people[1] = new Student("Tim","Computer");
		
		people[0].raiseSalary(100);
		
		for(Person p:people) {
			System.out.println(p.getName() + ", " + p.getDescription());
		}
	}

}

abstract class Person{
	public abstract String getDescription();
	
	private String name;
	
	public Person(String name) {
		this.name = name;
	}
	
	public String getName() {
		return name;
	}
}

class Employee extends Person {
	private double salary;
	private LocalDate hireDay;
	
	public Employee(String name, double s, int year, int month, int day) {
		super(name);     //调用父类的参数
		s = salary;
		hireDay = LocalDate.of(year,month,day);
	}
	
	public double getSalary() {
		return salary;
	}
	
	public LocalDate getHireDay() {
		return hireDay;
	}
	
	public String getDescription() {
		return String.format("an employee with a salary of %.2f", salary);	 //强制类型转换
	}
	
	public void raiseSalary(double byPercent) {
		double baseSalary = salary * byPercent / 100;
		salary += baseSalary;
	}
}

class Student extends Person{
	private String major;
	
	public Student(String name,String m) {
		super(name);
		m = major;
	}
	
	public String getDescription() {
		return "a student majoring in " + major;
	}
}